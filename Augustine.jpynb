import csv
import numpy as np
from typing import Set, Tuple, List
import torch
import torch.utils
import torch.utils.data
import torch.nn as nn
import torchvision
NoneType = type(None)
import matplotlib.pyplot as plt
from IPython.display import display, clear_output
from PIL import Image
import torchvision.transforms.functional as TF
from torchvision.models import vgg11
from torchvision.models import mobilenet_v2
import torchvision.transforms as transforms
import time

# Debugging by Augustine Boakye Yiadom, Prospective Master's Student

def id_to_fruit(fruit_id: int, fruits: Set[str]) -> str:
    """
    Returns the fruit name at a specific index in a sorted list of fruits.
    
    :param fruit_id: The id of the fruit to get
    :param fruits: The set of fruits to choose the id from
    :return: The string corresponding to the index ``fruit_id``
    
    **Fixed Issue:**
    - Sets are unordered, so they must be converted to a sorted list first.
    """
    fruits_list = sorted(fruits)  # Convert set to a sorted list
    if 0 <= fruit_id < len(fruits_list):
        return fruits_list[fruit_id]
    raise RuntimeError(f"Fruit with id {fruit_id} does not exist")

name1 = id_to_fruit(1, {"apple", "orange", "melon", "kiwi", "strawberry"})
name3 = id_to_fruit(3, {"apple", "orange", "melon", "kiwi", "strawberry"})
name4 = id_to_fruit(4, {"apple", "orange", "melon", "kiwi", "strawberry"})


def swap(coords: np.ndarray):
    """
    Swaps x and y coordinates in the numpy array.
    
    :param coords: A numpy array of bounding box coordinates with shape [n,5]
    :return: The modified numpy array with swapped coordinates.
    
    **Fixed Issue:**
    - Fixed incorrect assignment to properly swap values.
    """
    coords[:, [0, 1, 2, 3]] = coords[:, [1, 0, 3, 2]]  # Swapping
    return coords

coords = np.array([[10, 5, 15, 6, 0],
                   [11, 3, 13, 6, 0],
                   [5, 3, 13, 6, 1],
                   [4, 4, 13, 6, 1],
                   [6, 5, 13, 16, 1]])
swapped_coords = swap(coords)
